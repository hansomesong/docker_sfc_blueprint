tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.4/types.yaml
  - plugin:cloudify-utilities-plugin
  - imports/types.yaml

inputs:
  docker_api_ip:
    type: string

  docker_api_port:
    type: string

  docker_api_version:
    type: string

  host_container_name:
    type: string

  host_container_image:
    type: string

  ovs_container_name:
    type: string

  ovs_container_image:
    type: string

  server_container_name:
    type: string

  server_container_image:
    type: string

  host_ovs_network_name:
    type: string

  host_ovs_network_cidr:
    type: string

  ovs_server_network_name:
    type: string

  ovs_server_network_cidr:
    type: string

node_templates:
  host_container:
    type: cloudify.nodes.docker.Container
    properties:
      hosts:
        - { get_input: docker_api_ip }
      port: { get_input: docker_api_port }
      ssl: false
      verify: false
      api_version: { get_input: docker_api_version }
      name: { get_input: host_container_name }
      image: { get_input: host_container_image }
      command: ['/bin/bash']

  ovs_container:
    type: cloudify.nodes.docker.Container
    properties:
      hosts:
        - { get_input: docker_api_ip }
      port: { get_input: docker_api_port }
      ssl: false
      verify: false
      api_version: { get_input: docker_api_version }
      name: { get_input: ovs_container_name }
      image: { get_input: ovs_container_image }
      command: ~

  server_container:
    type: cloudify.nodes.docker.Container
    properties:
      hosts:
        - { get_input: docker_api_ip }
      port: { get_input: docker_api_port }
      ssl: false
      verify: false
      api_version: { get_input: docker_api_version }
      name: { get_input: server_container_name }
      image: { get_input: server_container_image }
      command: ['/bin/bash']

  host_ovs_network:
    type: cloudify.nodes.docker.Network
    properties:
      hosts:
        - { get_input: docker_api_ip }
      port: { get_input: docker_api_port }
      ssl: false
      verify: false
      api_version: { get_input: docker_api_version }
      name: { get_input: host_ovs_network_name }
      cidr: { get_input: host_ovs_network_cidr }

  ovs_server_network:
    type: cloudify.nodes.docker.Network
    properties:
      hosts:
        - { get_input: docker_api_ip }
      port: { get_input: docker_api_port }
      ssl: false
      verify: false
      api_version: { get_input: docker_api_version }
      name: { get_input: ovs_server_network_name }
      cidr: { get_input: ovs_server_network_cidr }

  host_to_ovs_interface:
    type: cloudify.nodes.docker.network.Interface
    properties:
      hosts:
        - { get_input: docker_api_ip }
      port: { get_input: docker_api_port }
      ssl: false
      verify: false
      api_version: { get_input: docker_api_version }
      network_name: { get_property: [host_ovs_network, name] }
      container_name: { get_property: [host_container, name] }
    relationships:
      - type: cloudify.relationships.connected_to
        target: host_container
      - type: cloudify.relationships.connected_to
        target: host_ovs_network

  ovs_to_host_interface:
    type: cloudify.nodes.docker.network.Interface
    properties:
      hosts:
        - { get_input: docker_api_ip }
      port: { get_input: docker_api_port }
      ssl: false
      verify: false
      api_version: { get_input: docker_api_version }
      network_name: { get_property: [host_ovs_network, name] }
      container_name: { get_property: [ovs_container, name] }
    relationships:
      - type: cloudify.relationships.connected_to
        target: ovs_container
      - type: cloudify.relationships.connected_to
        target: host_ovs_network

  server_to_ovs_interface:
    type: cloudify.nodes.docker.network.Interface
    properties:
      hosts:
        - { get_input: docker_api_ip }
      port: { get_input: docker_api_port }
      ssl: false
      verify: false
      api_version: { get_input: docker_api_version }
      network_name: { get_property: [ovs_server_network, name] }
      container_name: { get_property: [server_container, name] }
    relationships:
      - type: cloudify.relationships.connected_to
        target: server_container
      - type: cloudify.relationships.connected_to
        target: ovs_server_network

  ovs_to_server_interface:
    type: cloudify.nodes.docker.network.Interface
    properties:
      hosts:
        - { get_input: docker_api_ip }
      port: { get_input: docker_api_port }
      ssl: false
      verify: false
      api_version: { get_input: docker_api_version }
      network_name: { get_property: [ovs_server_network, name] }
      container_name: { get_property: [ovs_container, name] }
    relationships:
      - type: cloudify.relationships.connected_to
        target: ovs_container
      - type: cloudify.relationships.connected_to
        target: ovs_server_network
